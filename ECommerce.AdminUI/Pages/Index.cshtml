@page
@model ECommerce.AdminUI.Pages.IndexModel
@{
    ViewData["Title"] = "Dashboard";
}

<style>
    /* Card background colors */
    .bg-customers {
        background-color: #1abc9c !important;
    }

    .bg-products {
        background-color: #9b59b6 !important;
    }

    .bg-orders {
        background-color: #3498db !important;
    }

    .bg-sales {
        background-color: #2ecc71 !important;
    }

    /* Custom colors for the card footers */
    .card-footer-customers {
        background-color: #16a085 !important;
    }

    .card-footer-products {
        background-color: #8e44ad !important;
    }

    .card-footer-orders {
        background-color: #2980b9 !important;
    }

    .card-footer-sales {
        background-color: #27ae60 !important;
    }

    /* Remove borders from cards */
    .card {
        border: none !important;
        border-radius: 8px;
        overflow: hidden;
    }

    .card-footer {
        border-top: none !important;
    }
</style>

<div class="container-fluid px-4">
    <h1 class="mt-4">Dashboard</h1>
    <p>Welcome, @Model.Username! Here's your ECommerce system at a glance.</p>

    <div class="row mt-4">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-customers text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="display-4 mb-0">@Model.Stats.CustomerCount</h2>
                            <div>Customers</div>
                        </div>
                        <div>
                            <i class="bi bi-people fs-1"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between card-footer-customers">
                    <a class="small text-white stretched-link" asp-page="/Customers/Index">View Details</a>
                    <div class="small text-white"><i class="bi bi-arrow-right"></i></div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card bg-products text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="display-4 mb-0">@Model.Stats.ProductCount</h2>
                            <div>Products</div>
                        </div>
                        <div>
                            <i class="bi bi-box fs-1"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between card-footer-products">
                    <a class="small text-white stretched-link" asp-page="/Products/Index">View Details</a>
                    <div class="small text-white"><i class="bi bi-arrow-right"></i></div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card bg-orders text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="display-4 mb-0">@Model.Stats.OrderCount</h2>
                            <div>Orders</div>
                        </div>
                        <div>
                            <i class="bi bi-cart fs-1"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between card-footer-orders">
                    <a class="small text-white stretched-link" asp-page="/Orders/Index">View Details</a>
                    <div class="small text-white"><i class="bi bi-arrow-right"></i></div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card bg-sales text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="display-4 mb-0">$@Model.Stats.TotalSales.ToString("N0")</h2>
                            <div>Total Sales</div>
                        </div>
                        <div>
                            <i class="bi bi-currency-dollar fs-1"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between card-footer-sales">
                    <a class="small text-white stretched-link" href="#">View Details</a>
                    <div class="small text-white"><i class="bi bi-arrow-right"></i></div>
                </div>
            </div>
        </div>
    </div>

    <div class="accordion mt-4" id="dashboardAccordion">
        <!-- Orders Over Time Accordion -->
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingOrders">
                <button class="accordion-button" type="button" data-bs-toggle="collapse"
                    data-bs-target="#collapseOrders" aria-expanded="true" aria-controls="collapseOrders">
                    <i class="bi bi-graph-up me-2"></i> Sales Over Time
                </button>
            </h2>
            <div id="collapseOrders" class="accordion-collapse collapse show" aria-labelledby="headingOrders"
                data-bs-parent="#dashboardAccordion">
                <div class="accordion-body">
                    <canvas id="ordersChart" height="100"></canvas>
                </div>
            </div>
        </div>

        <!-- System Status Accordion -->
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingStatus">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                    data-bs-target="#collapseStatus" aria-expanded="false" aria-controls="collapseStatus">
                    <i class="bi bi-clipboard-data me-2"></i> System Status
                </button>
            </h2>
            <div id="collapseStatus" class="accordion-collapse collapse" aria-labelledby="headingStatus"
                data-bs-parent="#dashboardAccordion">
                <div class="accordion-body">
                    <p>Your e-commerce system is running properly. Below is a quick overview of available modules:</p>
                    <ul class="list-group">
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Customer Management
                            <span class="badge bg-success rounded-pill">Online</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Product Management
                            <span class="badge bg-success rounded-pill">Online</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Order Management
                            <span class="badge bg-success rounded-pill">Online</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Business Events
                            <span class="badge bg-success rounded-pill">Online</span>
                        </li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Recent Business Events Accordion -->
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingEvents">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                    data-bs-target="#collapseEvents" aria-expanded="false" aria-controls="collapseEvents">
                    <i class="bi bi-activity me-2"></i> Recent Business Events
                </button>
            </h2>
            <div id="collapseEvents" class="accordion-collapse collapse" aria-labelledby="headingEvents"
                data-bs-parent="#dashboardAccordion">
                <div class="accordion-body">
                    @if (Model.Stats.RecentEvents.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Timestamp</th>
                                        <th>Entity Type</th>
                                        <th>Event Type</th>
                                        <th>Entity ID</th>
                                        <th>Actor</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var evt in Model.Stats.RecentEvents)
                                    {
                                        <tr>
                                            <td>@evt.EventTimestamp.ToString("g")</td>
                                            <td>
                                                <span class="badge rounded-pill bg-info">@evt.EntityType</span>
                                            </td>
                                            <td>
                                                @{
                                                    var badgeClass = evt.EventType switch
                                                    {
                                                        "Created" => "bg-success",
                                                        "Updated" => "bg-warning",
                                                        "Deleted" => "bg-danger",
                                                        "Viewed" => "bg-info",
                                                        _ => "bg-secondary"
                                                    };
                                                }
                                                <span class="badge rounded-pill @badgeClass">@evt.EventType</span>
                                            </td>
                                            <td>@evt.EntityId</td>
                                            <td>
                                                <small>@evt.ActorId (@evt.ActorType)</small>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">No recent business events found.</div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Order statistics data from the model
            const orderStats = @Html.Raw(Json.Serialize(Model.Stats.OrderStatistics));

            console.log("Chart data:", orderStats); // Log data for debugging

            // Format dates for display - improved to handle timezone issues
            const labels = orderStats.map(stat => {
                // Parse the date with explicit handling of UTC dates
                const dateParts = stat.date.split('T')[0].split('-');
                const year = parseInt(dateParts[0]);
                const month = parseInt(dateParts[1]) - 1; // JavaScript months are 0-indexed
                const day = parseInt(dateParts[2]);

                // Create date object using UTC to avoid timezone shifts
                const date = new Date(Date.UTC(year, month, day));
                return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });
            });

            // Total sales for the chart
            const totalSales = orderStats.map(stat => stat.totalSales);

            console.log("Chart labels:", labels); // Log formatted labels for debugging
            console.log("Chart values:", totalSales); // Log values for debugging

            // Create the chart
            const ctx = document.getElementById('ordersChart');
            const salesChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Daily Sales ($)',
                            data: totalSales,
                            backgroundColor: 'rgba(46, 204, 113, 0.6)',
                            borderColor: 'rgba(39, 174, 96, 1)',
                            borderWidth: 1
                        }
                    ]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        title: {
                            display: true,
                            text: 'Total Sales for the Last 7 Days'
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    let label = context.dataset.label || '';
                                    if (label) {
                                        label += ': ';
                                    }
                                    label += new Intl.NumberFormat('en-US', {
                                        style: 'currency',
                                        currency: 'USD'
                                    }).format(context.raw);
                                    return label;
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Sales Amount ($)'
                            },
                            ticks: {
                                callback: function(value) {
                                    return '$' + value.toLocaleString();
                                }
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Date'
                            }
                        }
                    }
                }
            });
        });
    </script>
}
