@page
@model ECommerce.AdminUI.Pages.IndexModel
@{
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Dashboard</h1>
    <p>Welcome, @Model.Username! Here's your ECommerce system at a glance.</p>

    <div class="row mt-4">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-primary text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="display-4 mb-0">@Model.Stats.CustomerCount</h2>
                            <div>Customers</div>
                        </div>
                        <div>
                            <i class="bi bi-people fs-1"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" asp-page="/Customers/Index">View Details</a>
                    <div class="small text-white"><i class="bi bi-arrow-right"></i></div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card bg-info text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="display-4 mb-0">@Model.Stats.ProductCount</h2>
                            <div>Products</div>
                        </div>
                        <div>
                            <i class="bi bi-box fs-1"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" asp-page="/Products/Index">View Details</a>
                    <div class="small text-white"><i class="bi bi-arrow-right"></i></div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card bg-success text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="display-4 mb-0">@Model.Stats.OrderCount</h2>
                            <div>Orders</div>
                        </div>
                        <div>
                            <i class="bi bi-cart fs-1"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" asp-page="/Orders/Index">View Details</a>
                    <div class="small text-white"><i class="bi bi-arrow-right"></i></div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card bg-secondary text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="display-4 mb-0">$@Model.Stats.TotalSales.ToString("N0")</h2>
                            <div>Total Sales</div>
                        </div>
                        <div>
                            <i class="bi bi-currency-dollar fs-1"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" href="#">View Details</a>
                    <div class="small text-white"><i class="bi bi-arrow-right"></i></div>
                </div>
            </div>
        </div>
    </div>

    <div class="accordion mt-4" id="dashboardAccordion">
        <!-- Orders Over Time Accordion -->
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingOrders">
                <button class="accordion-button" type="button" data-bs-toggle="collapse"
                    data-bs-target="#collapseOrders" aria-expanded="true" aria-controls="collapseOrders">
                    <i class="bi bi-graph-up me-2"></i> Orders Over Time
                </button>
            </h2>
            <div id="collapseOrders" class="accordion-collapse collapse show" aria-labelledby="headingOrders"
                data-bs-parent="#dashboardAccordion">
                <div class="accordion-body">
                    <canvas id="ordersChart" height="100"></canvas>
                </div>
            </div>
        </div>

        <!-- System Status Accordion -->
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingStatus">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                    data-bs-target="#collapseStatus" aria-expanded="false" aria-controls="collapseStatus">
                    <i class="bi bi-clipboard-data me-2"></i> System Status
                </button>
            </h2>
            <div id="collapseStatus" class="accordion-collapse collapse" aria-labelledby="headingStatus"
                data-bs-parent="#dashboardAccordion">
                <div class="accordion-body">
                    <p>Your e-commerce system is running properly. Below is a quick overview of available modules:</p>
                    <ul class="list-group">
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Customer Management
                            <span class="badge bg-success rounded-pill">Online</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Product Management
                            <span class="badge bg-success rounded-pill">Online</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Order Management
                            <span class="badge bg-success rounded-pill">Online</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Business Events
                            <span class="badge bg-success rounded-pill">Online</span>
                        </li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Recent Business Events Accordion -->
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingEvents">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                    data-bs-target="#collapseEvents" aria-expanded="false" aria-controls="collapseEvents">
                    <i class="bi bi-activity me-2"></i> Recent Business Events
                </button>
            </h2>
            <div id="collapseEvents" class="accordion-collapse collapse" aria-labelledby="headingEvents"
                data-bs-parent="#dashboardAccordion">
                <div class="accordion-body">
                    @if (Model.Stats.RecentEvents.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Timestamp</th>
                                        <th>Entity Type</th>
                                        <th>Event Type</th>
                                        <th>Entity ID</th>
                                        <th>Actor</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var evt in Model.Stats.RecentEvents)
                                    {
                                        <tr>
                                            <td>@evt.EventTimestamp.ToString("g")</td>
                                            <td>
                                                <span class="badge rounded-pill bg-info">@evt.EntityType</span>
                                            </td>
                                            <td>
                                                @{
                                                    var badgeClass = evt.EventType switch
                                                    {
                                                        "Created" => "bg-success",
                                                        "Updated" => "bg-warning",
                                                        "Deleted" => "bg-danger",
                                                        "Viewed" => "bg-info",
                                                        _ => "bg-secondary"
                                                    };
                                                }
                                                <span class="badge rounded-pill @badgeClass">@evt.EventType</span>
                                            </td>
                                            <td>@evt.EntityId</td>
                                            <td>
                                                <small>@evt.ActorId (@evt.ActorType)</small>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">No recent business events found.</div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Order statistics data from the model
            const orderStats = @Html.Raw(Json.Serialize(Model.Stats.OrderStatistics));

            // Format dates for display
            const labels = orderStats.map(stat => {
                const date = new Date(stat.date);
                return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });
            });

            // Order counts for the chart
            const orderCounts = orderStats.map(stat => stat.orderCount);

            // Total sales for the chart
            const totalSales = orderStats.map(stat => stat.totalSales);

            // Create the chart
            const ctx = document.getElementById('ordersChart');
            const ordersChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Orders',
                            data: orderCounts,
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 2,
                            tension: 0.2,
                            yAxisID: 'y'
                        },
                        {
                            label: 'Sales ($)',
                            data: totalSales,
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 2,
                            tension: 0.2,
                            yAxisID: 'y1'
                        }
                    ]
                },
                options: {
                    responsive: true,
                    interaction: {
                        mode: 'index',
                        intersect: false,
                    },
                    scales: {
                        y: {
                            type: 'linear',
                            display: true,
                            position: 'left',
                            title: {
                                display: true,
                                text: 'Orders'
                            }
                        },
                        y1: {
                            type: 'linear',
                            display: true,
                            position: 'right',
                            title: {
                                display: true,
                                text: 'Sales ($)'
                            },
                            grid: {
                                drawOnChartArea: false, // only want the grid lines for one axis to show up
                            },
                        }
                    },
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    let label = context.dataset.label || '';
                                    if (label) {
                                        label += ': ';
                                    }
                                    if (context.dataset.label === 'Sales ($)') {
                                        label += new Intl.NumberFormat('en-US', {
                                            style: 'currency',
                                            currency: 'USD'
                                        }).format(context.raw);
                                    } else {
                                        label += context.raw;
                                    }
                                    return label;
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
}
